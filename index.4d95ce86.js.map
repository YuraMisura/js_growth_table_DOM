{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,E,I,A,W,M,A,U,wI,G,CCKA,IAAM,EAAU,CACd,gBAAiB,SAAS,aAAa,CAAC,eACxC,gBAAiB,SAAS,aAAa,CAAC,eACxC,mBAAoB,SAAS,aAAa,CAAC,kBAC3C,mBAAoB,SAAS,aAAa,CAAC,iBAC7C,EAEM,EAAQ,SAAS,aAAa,CAAC,UAC/B,EAAO,EAAM,oBAAoB,CAAC,MAClC,EAAU,CAAI,CAAC,EAAE,CAAC,oBAAoB,CAAC,MAE7C,OAAO,IAAI,CAAC,GAAS,OAAO,CAAC,SAAA,CAA7B,EACE,IAAM,EAAe,CAAO,CAAC,EAAU,CAEvC,EAAa,gBAAgB,CAAC,QAAS,WACrC,AAKJ,CAAA,SAAqB,CAAY,EAG/B,OAFe,EAAa,SAAS,CAAC,EAAE,EAGtC,IAAK,aACH,EAAM,MAAM,CAAC,CAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA,IAC/B,KAEF,KAAK,aACH,CAAI,CAAC,EAAK,MAAM,CAAG,EAAE,CAAC,MAAM,GAC5B,KAEF,KAAK,gBACF,EAAG,GAAM,OAAO,CAAC,SAAA,CAAjB,EAAwB,OAAA,EAAI,MAAM,CAAC,CAAO,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA,G,GACzD,KAEF,KAAK,gBACF,EAAG,GAAM,OAAO,CAAC,SAAA,CAAjB,EAAwB,OAAA,EAAI,QAAQ,CAAC,EAAQ,MAAM,CAAG,EAAE,CAAC,MAAM,E,EAKpE,CACF,CAAA,EA5BgB,GA+Bd,EAAQ,eAAe,CAAC,QAAQ,CAAG,EAAK,MAAM,EAjDjB,GAkD7B,EAAQ,eAAe,CAAC,QAAQ,CAAG,EAAK,MAAM,EAjDjB,EAmD7B,EAAQ,kBAAkB,CAAC,QAAQ,CAC/B,EAAQ,MAAM,EArDW,GAuD7B,EAAQ,kBAAkB,CAAC,QAAQ,CAC/B,EAAQ,MAAM,EAvDW,CAmB7B,EACF,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar TABLE_MAX_COUNT_LENGTH = 10;\nvar TABLE_MIN_COUNT_LENGTH = 2;\nvar buttons = {\n    appendRowButton: document.querySelector(\".append-row\"),\n    removeRowButton: document.querySelector(\".remove-row\"),\n    appendColumnButton: document.querySelector(\".append-column\"),\n    removeColumnButton: document.querySelector(\".remove-column\")\n};\nvar table = document.querySelector(\".field\");\nvar rows = table.getElementsByTagName(\"tr\");\nvar columns = rows[0].getElementsByTagName(\"td\");\nObject.keys(buttons).forEach(function(buttonKey) {\n    var targetButton = buttons[buttonKey];\n    targetButton.addEventListener(\"click\", function() {\n        modifyTable(targetButton);\n        isButtonDisabled();\n    });\n});\nfunction modifyTable(targetButton) {\n    var action = targetButton.classList[0];\n    switch(action){\n        case \"append-row\":\n            table.append(rows[0].cloneNode(true));\n            break;\n        case \"remove-row\":\n            rows[rows.length - 1].remove();\n            break;\n        case \"append-column\":\n            _to_consumable_array(rows).forEach(function(row) {\n                return row.append(columns[0].cloneNode(true));\n            });\n            break;\n        case \"remove-column\":\n            _to_consumable_array(rows).forEach(function(row) {\n                return row.children[columns.length - 1].remove();\n            });\n            break;\n        default:\n            break;\n    }\n}\nfunction isButtonDisabled() {\n    buttons.appendRowButton.disabled = rows.length >= TABLE_MAX_COUNT_LENGTH;\n    buttons.removeRowButton.disabled = rows.length <= TABLE_MIN_COUNT_LENGTH;\n    buttons.appendColumnButton.disabled = columns.length >= TABLE_MAX_COUNT_LENGTH;\n    buttons.removeColumnButton.disabled = columns.length <= TABLE_MIN_COUNT_LENGTH;\n}\n\n//# sourceMappingURL=index.4d95ce86.js.map\n","'use strict';\n\nconst TABLE_MAX_COUNT_LENGTH = 10;\nconst TABLE_MIN_COUNT_LENGTH = 2;\n\nconst buttons = {\n  appendRowButton: document.querySelector('.append-row'),\n  removeRowButton: document.querySelector('.remove-row'),\n  appendColumnButton: document.querySelector('.append-column'),\n  removeColumnButton: document.querySelector('.remove-column'),\n};\n\nconst table = document.querySelector('.field');\nconst rows = table.getElementsByTagName('tr');\nconst columns = rows[0].getElementsByTagName('td');\n\nObject.keys(buttons).forEach(buttonKey => {\n  const targetButton = buttons[buttonKey];\n\n  targetButton.addEventListener('click', () => {\n    modifyTable(targetButton);\n    isButtonDisabled();\n  });\n});\n\nfunction modifyTable(targetButton) {\n  const action = targetButton.classList[0];\n\n  switch (action) {\n    case 'append-row':\n      table.append(rows[0].cloneNode(true));\n      break;\n\n    case 'remove-row':\n      rows[rows.length - 1].remove();\n      break;\n\n    case 'append-column':\n      [...rows].forEach(row => row.append(columns[0].cloneNode(true)));\n      break;\n\n    case 'remove-column':\n      [...rows].forEach(row => row.children[columns.length - 1].remove());\n      break;\n\n    default:\n      break;\n  }\n}\n\nfunction isButtonDisabled() {\n  buttons.appendRowButton.disabled = rows.length >= TABLE_MAX_COUNT_LENGTH;\n  buttons.removeRowButton.disabled = rows.length <= TABLE_MIN_COUNT_LENGTH;\n\n  buttons.appendColumnButton.disabled\n    = columns.length >= TABLE_MAX_COUNT_LENGTH;\n\n  buttons.removeColumnButton.disabled\n    = columns.length <= TABLE_MIN_COUNT_LENGTH;\n};\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","buttons","appendRowButton","document","querySelector","removeRowButton","appendColumnButton","removeColumnButton","table","rows","getElementsByTagName","columns","keys","forEach","buttonKey","targetButton","addEventListener","modifyTable","classList","append","cloneNode","remove","row","children","disabled"],"version":3,"file":"index.4d95ce86.js.map"}